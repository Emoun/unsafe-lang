use super::racp_lexer;
use super::token_lexer::Token;
use super::token_lexer::Token::*;
use racp::Racp;
use racp::Racp::*;

grammar;


pub Tokens: Vec<(usize, Token, usize)> = {
	<t:(Token)*> => t,
};

pub Token: (usize, Token, usize) = {
	<l:@L> <t: Terminal> <r:@R> <w:Whitespace*> => (l,t,r),
};

pub Terminal: Token = {
	<i:"i"> <f:"f"> => If,
	"e""l""s""e" => Else,
};

Whitespace: () = {
	" " => (),
	"\t" => (),
	"\n" => (),
};

extern {
	type Location = usize;
	type Error = racp_lexer::RacpLexerError;
	
	enum Racp {
		"\F" =>False,
		"\T" => True,
		" " => Space,
		"\t" => Tab,
		"\n" => NewLine,
		"/" => Slash,
		"\\" => Backslash,
		"\q" => RPilcrow,
		"\p" => Pilcrow,
		"\<" => LDQuote,
		"\>" => RDQuote,
		"\[" => LLath,
		"\]" => RLath,
		"\{" => LJamb,
		"\}" => RJamb,
		"(" => LParen,
		")" => RParen,
		"[" => LBracket,
		"]" => RBracket,
		"{" => LBrace,
		"}" => RBrace,
		"\(" => LABracket,
		"\)" => RABracket,
		"<" => Lt,
		">" => Gt,
		"=" => Equal,
		"\!" => Not,
		"&" => Aampersand,
		"|" => VBar,
		"^" => Caret,
		"$" => Dollar,
		"\0" => Hex0,
		"\1" => Hex1,
		"\2" => Hex2,
		"\3" => Hex3,
		"\4" => Hex4,
		"\5" => Hex5,
		"\6" => Hex6,
		"\7" => Hex7,
		"\8" => Hex8,
		"\9" => Hex9,
		"\a" => Hex10,
		"\b" => Hex11,
		"\c" => Hex12,
		"\d" => Hex13,
		"\e" => Hex14,
		"\f" => Hex15,
		"0" => Dec0,
		"1" => Dec1,
		"2" => Dec2,
		"3" => Dec3,
		"4" => Dec4,
		"5" => Dec5,
		"6" => Dec6,
		"7" => Dec7,
		"8" => Dec8,
		"9" => Dec9,
		":" => Colon,
		";" => Semicolon,
		"." => Period,
		"," => Comma,
		"!" => Exclamation,
		"?" => Question,
		"@" => At,
		"A" => CapA,
		"B" => CapB,
		"C" => CapC,
		"D" => CapD,
		"E" => CapE,
		"F" => CapF,
		"G" => CapG,
		"H" => CapH,
		"I" => CapI,
		"J" => CapJ,
		"K" => CapK,
		"L" => CapL,
		"M" => CapM,
		"N" => CapN,
		"O" => CapO,
		"P" => CapP,
		"Q" => CapQ,
		"R" => CapR,
		"S" => CapS,
		"T" => CapT,
		"U" => CapU,
		"V" => CapV,
		"W" => CapW,
		"X" => CapX,
		"Y" => CapY,
		"Z" => CapZ,
		"+" => Plus,
		"-" => Dash,
		"*" => Asterisk,
		"\~" => Division,
		"%" => Percent,
		"\s" => Section,
		"a" => LowA,
		"b" => LowB,
		"c" => LowC,
		"d" => LowD,
		"e" => LowE,
		"f" => LowF,
		"g" => LowG,
		"h" => LowH,
		"i" => LowI,
		"j" => LowJ,
		"k" => LowK,
		"l" => LowL,
		"m" => LowM,
		"n" => LowN,
		"o" => LowO,
		"p" => LowP,
		"q" => LowQ,
		"r" => LowR,
		"s" => LowS,
		"t" => LowT,
		"u" => LowU,
		"v" => LowV,
		"w" => LowW,
		"x" => LowX,
		"y" => LowY,
		"z" => LowZ,
		"\"" => Quote,
		"'" => Apostrophe,
		"_" => Underscore,
		"~" => Tilde,
		"#" => Hash
	}
}